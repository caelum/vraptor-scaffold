package <%= Configuration.package %>.controllers;

import java.util.List;

import <%= Configuration.package %>.models.<%= class_name %>;
import <%= Configuration.package %>.repositories.<%= repository_interface_name %>;
import br.com.caelum.vraptor.Delete;
import br.com.caelum.vraptor.Get;
import br.com.caelum.vraptor.Path;
import br.com.caelum.vraptor.Post;
import br.com.caelum.vraptor.Put;
import br.com.caelum.vraptor.Resource;
import br.com.caelum.vraptor.Result;
import br.com.caelum.vraptor.Validator;

@Resource
public class <%= controller_class_name %> {

	private final Result result;
	private final <%= repository_interface_name %> repository;
	private final Validator validator;
	
	<%= controller_class_name %>(Result result, <%= repository_interface_name %> repository, Validator validator) {
		this.result = result;
		this.repository = repository;
		this.validator = validator;
	}
	
	@Get
	@Path("<%= path %>")
	public List<<%= class_name %>> index() {
		return repository.findAll();
	}
	
	@Post
	@Path("<%= path %>")
	public void create(<%= class_name %> <%= model_parameter_name %>) {
		validator.validate(<%= model_parameter_name %>);
		validator.onErrorUsePageOf(this).new<%= class_name %>();
		repository.create(<%= model_parameter_name %>);
		result.redirectTo(this).index();
	}
	
	@Get
	@Path("<%= "#{path}/new" %>")
	public <%= class_name %> new<%= class_name %>() {
		return new <%= class_name %>();
	}
	
	@Put
	@Path("<%= path %>")
	public void update(<%= class_name %> <%= model_parameter_name %>) {
		validator.validate(<%= model_parameter_name %>);
		validator.onErrorUsePageOf(this).edit(<%= model_parameter_name %>);
		repository.update(<%= model_parameter_name %>);
		result.redirectTo(this).index();
	}
	
	@Get
	@Path("<%= "#{path}/{#{model_parameter_name}.id}/edit" %>")
	public <%= class_name %> edit(<%= class_name %> <%= model_parameter_name %>) {
		return repository.find(<%= model_parameter_name %>.getId());
	}

	@Get
	@Path("<%= "#{path}/{#{model_parameter_name}.id}" %>")
	public <%= class_name %> show(<%= class_name %> <%= model_parameter_name %>) {
		return repository.find(<%= model_parameter_name %>.getId());
	}

	@Delete
	@Path("<%= "#{path}/{#{model_parameter_name}.id}" %>")
	public void destroy(<%= class_name %> <%= model_parameter_name %>) {
		repository.destroy(repository.find(<%= model_parameter_name %>.getId()));
		result.redirectTo(this).index();  
	}
	
}
